// Generated by view binder compiler. Do not edit!
package com.example.bloodblank.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bloodblank.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDonorInformationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView donorAddressTextView;

  @NonNull
  public final TextView donorBloodDonatedTextView;

  @NonNull
  public final TextView donorBloodGroupTextView;

  @NonNull
  public final TextView donorDateOfBirthTextView;

  @NonNull
  public final TextView donorDateOfDonationTextView;

  @NonNull
  public final TextView donorEmailTextView;

  @NonNull
  public final TextView donorGenderTextView;

  @NonNull
  public final TextView donorHospitalNameTextView;

  @NonNull
  public final TextView donorIDTextView;

  @NonNull
  public final TextView donorMobileNumberTextView;

  @NonNull
  public final TextView donorNameTextView;

  @NonNull
  public final TextView donorPostalCodeTextView;

  @NonNull
  public final CardView informationCardView;

  @NonNull
  public final CardView profilePhotoCardView;

  @NonNull
  public final ImageView profilePhotoImageView;

  private ActivityDonorInformationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView donorAddressTextView, @NonNull TextView donorBloodDonatedTextView,
      @NonNull TextView donorBloodGroupTextView, @NonNull TextView donorDateOfBirthTextView,
      @NonNull TextView donorDateOfDonationTextView, @NonNull TextView donorEmailTextView,
      @NonNull TextView donorGenderTextView, @NonNull TextView donorHospitalNameTextView,
      @NonNull TextView donorIDTextView, @NonNull TextView donorMobileNumberTextView,
      @NonNull TextView donorNameTextView, @NonNull TextView donorPostalCodeTextView,
      @NonNull CardView informationCardView, @NonNull CardView profilePhotoCardView,
      @NonNull ImageView profilePhotoImageView) {
    this.rootView = rootView;
    this.donorAddressTextView = donorAddressTextView;
    this.donorBloodDonatedTextView = donorBloodDonatedTextView;
    this.donorBloodGroupTextView = donorBloodGroupTextView;
    this.donorDateOfBirthTextView = donorDateOfBirthTextView;
    this.donorDateOfDonationTextView = donorDateOfDonationTextView;
    this.donorEmailTextView = donorEmailTextView;
    this.donorGenderTextView = donorGenderTextView;
    this.donorHospitalNameTextView = donorHospitalNameTextView;
    this.donorIDTextView = donorIDTextView;
    this.donorMobileNumberTextView = donorMobileNumberTextView;
    this.donorNameTextView = donorNameTextView;
    this.donorPostalCodeTextView = donorPostalCodeTextView;
    this.informationCardView = informationCardView;
    this.profilePhotoCardView = profilePhotoCardView;
    this.profilePhotoImageView = profilePhotoImageView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDonorInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDonorInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_donor_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDonorInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.donorAddressTextView;
      TextView donorAddressTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorAddressTextView == null) {
        break missingId;
      }

      id = R.id.donorBloodDonatedTextView;
      TextView donorBloodDonatedTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorBloodDonatedTextView == null) {
        break missingId;
      }

      id = R.id.donorBloodGroupTextView;
      TextView donorBloodGroupTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorBloodGroupTextView == null) {
        break missingId;
      }

      id = R.id.donorDateOfBirthTextView;
      TextView donorDateOfBirthTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorDateOfBirthTextView == null) {
        break missingId;
      }

      id = R.id.donorDateOfDonationTextView;
      TextView donorDateOfDonationTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorDateOfDonationTextView == null) {
        break missingId;
      }

      id = R.id.donorEmailTextView;
      TextView donorEmailTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorEmailTextView == null) {
        break missingId;
      }

      id = R.id.donorGenderTextView;
      TextView donorGenderTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorGenderTextView == null) {
        break missingId;
      }

      id = R.id.donorHospitalNameTextView;
      TextView donorHospitalNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorHospitalNameTextView == null) {
        break missingId;
      }

      id = R.id.donorIDTextView;
      TextView donorIDTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorIDTextView == null) {
        break missingId;
      }

      id = R.id.donorMobileNumberTextView;
      TextView donorMobileNumberTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorMobileNumberTextView == null) {
        break missingId;
      }

      id = R.id.donorNameTextView;
      TextView donorNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorNameTextView == null) {
        break missingId;
      }

      id = R.id.donorPostalCodeTextView;
      TextView donorPostalCodeTextView = ViewBindings.findChildViewById(rootView, id);
      if (donorPostalCodeTextView == null) {
        break missingId;
      }

      id = R.id.informationCardView;
      CardView informationCardView = ViewBindings.findChildViewById(rootView, id);
      if (informationCardView == null) {
        break missingId;
      }

      id = R.id.profilePhotoCardView;
      CardView profilePhotoCardView = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoCardView == null) {
        break missingId;
      }

      id = R.id.profilePhotoImageView;
      ImageView profilePhotoImageView = ViewBindings.findChildViewById(rootView, id);
      if (profilePhotoImageView == null) {
        break missingId;
      }

      return new ActivityDonorInformationBinding((ConstraintLayout) rootView, donorAddressTextView,
          donorBloodDonatedTextView, donorBloodGroupTextView, donorDateOfBirthTextView,
          donorDateOfDonationTextView, donorEmailTextView, donorGenderTextView,
          donorHospitalNameTextView, donorIDTextView, donorMobileNumberTextView, donorNameTextView,
          donorPostalCodeTextView, informationCardView, profilePhotoCardView,
          profilePhotoImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
